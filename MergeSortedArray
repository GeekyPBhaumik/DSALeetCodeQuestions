//https://leetcode.com/problems/merge-sorted-array/

class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        //nums1 -> 1 2 3 0 0 0 , m=3
        //nums2 -> 2 5 6 , n=3
        ArrayList<Integer> arr = new ArrayList<>();
        int i=0,j=0;
        //Applying 2-pointer approach 
        while(i<m && j<n){
            if(nums1[i]<nums2[j]){
                arr.add(nums1[i]);
                i++;
            }else{
                //including both the condition for nums2[j]<nums1[i] and nums2[j]==nums1[i]
                arr.add(nums2[j]);
                j++;
            }
        }
        while(i<m){
            arr.add(nums1[i]);
            i++;
        }
        while(j<n){
            arr.add(nums2[j]);
            j++;
        }
        //copying the elements from the arraylist to the nums1 array
        //as the size of nums1 array is n+m , so traversing until n+m
        for(int k=0;k<n+m;k++){
            nums1[k]=arr.get(k);
        }
    }
}
